<!--
    - Policies are applied in the order they appear.
    - Position <base/> inside a section to inherit policies from the outer scope.
    - Comments within policies are not preserved.
-->
<!-- Add policies as children to the <inbound>, <outbound>, <backend>, and <on-error> elements -->
<policies>
	<!-- Throttle, authorize, validate, cache, or transform the requests -->
	<inbound>
		<base />
		<set-backend-service base-url="https://mocktarget.apigee.net" />
		<rate-limit-by-key calls="4" renewal-period="30" counter-key="@(context.Subscription?.Key ?? "anonymous")" />
	</inbound>
	<!-- Control if and how the requests are forwarded to services  -->
	<backend>
		<base />
	</backend>
	<!-- Customize the responses -->
	<outbound>
		<base />
		<log-to-eventhub logger-id="apim-eh-loggerId">@{
                return new JObject(
                    new JProperty("EventTime", DateTime.UtcNow.ToString()),
                    new JProperty("ServiceName", context.Deployment.ServiceName),
                    new JProperty("RequestId", context.RequestId),
                    new JProperty("RequestIp", context.Request.IpAddress),
                    new JProperty("OperationName", context.Operation.Name),
                    new JProperty("OperationMethod", context.Operation.Method),
                    new JProperty("ApiName", context.Api.Name),
                    new JProperty("ApiPath", context.Api.Path),
                    new JProperty("ApiVersion", context.Api.Version),
                    new JProperty("ApiRevision", context.Api.Revision),
                    new JProperty("GatewayId", context.Deployment.GatewayId),
                    new JProperty("DepRegion", context.Deployment.Region),
                    new JProperty("SubsName", context.Subscription.Name),
                    new JProperty("SubsId", context.Subscription.Id),
                    new JProperty("RequestHeader1", context.Request.Headers.GetValueOrDefault("apim-key", "blank")),
                    new JProperty("RequestHeader2", context.Request.Headers.GetValueOrDefault("Authorization", "blank")),
                    new JProperty("TargetUrl", context.Request.Url.ToString()),
                    new JProperty("ResponseReason", context.Response.StatusReason),
                    new JProperty("ResponseCode", context.Response.StatusCode.ToString())
                ).ToString();
            }</log-to-eventhub>
	</outbound>
	<on-error>
		<base />
		<log-to-eventhub logger-id="apim-eh-loggerId">@{
                return new JObject(
                    new JProperty("ErrSource", context.LastError.Source),
                    new JProperty("ErrReason", context.LastError.Reason),
                    new JProperty("ErrMessage", context.LastError.Message),
                    new JProperty("ErrScope", context.LastError.Scope),
                    new JProperty("ErrSection", context.LastError.Section),
                    new JProperty("ErrPath", context.LastError.Path),
                    new JProperty("ErrPolicyId", context.LastError.PolicyId)
                ).ToString();
            }</log-to-eventhub>
	</on-error>
</policies>